// Code generated by entc, DO NOT EDIT.

package employeeworkinghours

const (
	// Label holds the string label denoting the employeeworkinghours type in the database.
	Label = "employee_working_hours"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIDEmployee holds the string denoting the idemployee field in the database.
	FieldIDEmployee = "id_employee"
	// FieldIDNumber holds the string denoting the idnumber field in the database.
	FieldIDNumber = "id_number"
	// FieldWages holds the string denoting the wages field in the database.
	FieldWages = "wages"

	// EdgeEmployee holds the string denoting the employee edge name in mutations.
	EdgeEmployee = "employee"
	// EdgeDay holds the string denoting the day edge name in mutations.
	EdgeDay = "day"
	// EdgeShift holds the string denoting the shift edge name in mutations.
	EdgeShift = "shift"
	// EdgeRole holds the string denoting the role edge name in mutations.
	EdgeRole = "role"

	// Table holds the table name of the employeeworkinghours in the database.
	Table = "employee_working_hours"
	// EmployeeTable is the table the holds the employee relation/edge.
	EmployeeTable = "employee_working_hours"
	// EmployeeInverseTable is the table name for the Employee entity.
	// It exists in this package in order to avoid circular dependency with the "employee" package.
	EmployeeInverseTable = "employees"
	// EmployeeColumn is the table column denoting the employee relation/edge.
	EmployeeColumn = "employee_whose"
	// DayTable is the table the holds the day relation/edge.
	DayTable = "employee_working_hours"
	// DayInverseTable is the table name for the Day entity.
	// It exists in this package in order to avoid circular dependency with the "day" package.
	DayInverseTable = "days"
	// DayColumn is the table column denoting the day relation/edge.
	DayColumn = "day_whatday"
	// ShiftTable is the table the holds the shift relation/edge.
	ShiftTable = "employee_working_hours"
	// ShiftInverseTable is the table name for the Shift entity.
	// It exists in this package in order to avoid circular dependency with the "shift" package.
	ShiftInverseTable = "shifts"
	// ShiftColumn is the table column denoting the shift relation/edge.
	ShiftColumn = "shift_when"
	// RoleTable is the table the holds the role relation/edge.
	RoleTable = "employee_working_hours"
	// RoleInverseTable is the table name for the Role entity.
	// It exists in this package in order to avoid circular dependency with the "role" package.
	RoleInverseTable = "roles"
	// RoleColumn is the table column denoting the role relation/edge.
	RoleColumn = "role_todo"
)

// Columns holds all SQL columns for employeeworkinghours fields.
var Columns = []string{
	FieldID,
	FieldIDEmployee,
	FieldIDNumber,
	FieldWages,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the EmployeeWorkingHours type.
var ForeignKeys = []string{
	"day_whatday",
	"employee_whose",
	"role_todo",
	"shift_when",
}

var (
	// IDEmployeeValidator is a validator for the "IDEmployee" field. It is called by the builders before save.
	IDEmployeeValidator func(string) error
	// IDNumberValidator is a validator for the "IDNumber" field. It is called by the builders before save.
	IDNumberValidator func(string) error
	// WagesValidator is a validator for the "Wages" field. It is called by the builders before save.
	WagesValidator func(float64) error
)
