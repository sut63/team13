// Code generated by entc, DO NOT EDIT.

package orderproduct

const (
	// Label holds the string label denoting the orderproduct type in the database.
	Label = "orderproduct"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddedtime holds the string denoting the addedtime field in the database.
	FieldAddedtime = "addedtime"
	// FieldStock holds the string denoting the stock field in the database.
	FieldStock = "stock"

	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "product"
	// EdgeCompany holds the string denoting the company edge name in mutations.
	EdgeCompany = "company"
	// EdgeTypeproduct holds the string denoting the typeproduct edge name in mutations.
	EdgeTypeproduct = "Typeproduct"
	// EdgeManagers holds the string denoting the managers edge name in mutations.
	EdgeManagers = "managers"

	// Table holds the table name of the orderproduct in the database.
	Table = "orderproducts"
	// ProductTable is the table the holds the product relation/edge.
	ProductTable = "orderproducts"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "products"
	// ProductColumn is the table column denoting the product relation/edge.
	ProductColumn = "product_products"
	// CompanyTable is the table the holds the company relation/edge.
	CompanyTable = "orderproducts"
	// CompanyInverseTable is the table name for the Company entity.
	// It exists in this package in order to avoid circular dependency with the "company" package.
	CompanyInverseTable = "companies"
	// CompanyColumn is the table column denoting the company relation/edge.
	CompanyColumn = "company_companys"
	// TypeproductTable is the table the holds the Typeproduct relation/edge.
	TypeproductTable = "orderproducts"
	// TypeproductInverseTable is the table name for the Typeproduct entity.
	// It exists in this package in order to avoid circular dependency with the "typeproduct" package.
	TypeproductInverseTable = "typeproducts"
	// TypeproductColumn is the table column denoting the Typeproduct relation/edge.
	TypeproductColumn = "typeproduct_typeproducts"
	// ManagersTable is the table the holds the managers relation/edge.
	ManagersTable = "orderproducts"
	// ManagersInverseTable is the table name for the Manager entity.
	// It exists in this package in order to avoid circular dependency with the "manager" package.
	ManagersInverseTable = "managers"
	// ManagersColumn is the table column denoting the managers relation/edge.
	ManagersColumn = "manager_managers"
)

// Columns holds all SQL columns for orderproduct fields.
var Columns = []string{
	FieldID,
	FieldAddedtime,
	FieldStock,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Orderproduct type.
var ForeignKeys = []string{
	"company_companys",
	"manager_managers",
	"product_products",
	"typeproduct_typeproducts",
}

var (
	// StockValidator is a validator for the "stock" field. It is called by the builders before save.
	StockValidator func(int) error
)
