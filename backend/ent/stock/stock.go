// Code generated by entc, DO NOT EDIT.

package stock

const (
	// Label holds the string label denoting the stock type in the database.
	Label = "stock"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIDstock holds the string denoting the idstock field in the database.
	FieldIDstock = "idstock"
	// FieldPriceproduct holds the string denoting the priceproduct field in the database.
	FieldPriceproduct = "priceproduct"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldTime holds the string denoting the time field in the database.
	FieldTime = "time"

	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "product"
	// EdgeZoneproduct holds the string denoting the zoneproduct edge name in mutations.
	EdgeZoneproduct = "zoneproduct"
	// EdgeEmployee holds the string denoting the employee edge name in mutations.
	EdgeEmployee = "employee"
	// EdgeTypeproduct holds the string denoting the typeproduct edge name in mutations.
	EdgeTypeproduct = "Typeproduct"

	// Table holds the table name of the stock in the database.
	Table = "stocks"
	// ProductTable is the table the holds the product relation/edge.
	ProductTable = "stocks"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "products"
	// ProductColumn is the table column denoting the product relation/edge.
	ProductColumn = "product_stockproduct"
	// ZoneproductTable is the table the holds the zoneproduct relation/edge.
	ZoneproductTable = "stocks"
	// ZoneproductInverseTable is the table name for the Zoneproduct entity.
	// It exists in this package in order to avoid circular dependency with the "zoneproduct" package.
	ZoneproductInverseTable = "zoneproducts"
	// ZoneproductColumn is the table column denoting the zoneproduct relation/edge.
	ZoneproductColumn = "zoneproduct_zonestock"
	// EmployeeTable is the table the holds the employee relation/edge.
	EmployeeTable = "stocks"
	// EmployeeInverseTable is the table name for the Employee entity.
	// It exists in this package in order to avoid circular dependency with the "employee" package.
	EmployeeInverseTable = "employees"
	// EmployeeColumn is the table column denoting the employee relation/edge.
	EmployeeColumn = "employee_employeestock"
	// TypeproductTable is the table the holds the Typeproduct relation/edge.
	TypeproductTable = "stocks"
	// TypeproductInverseTable is the table name for the Typeproduct entity.
	// It exists in this package in order to avoid circular dependency with the "typeproduct" package.
	TypeproductInverseTable = "typeproducts"
	// TypeproductColumn is the table column denoting the Typeproduct relation/edge.
	TypeproductColumn = "typeproduct_typestock"
)

// Columns holds all SQL columns for stock fields.
var Columns = []string{
	FieldID,
	FieldIDstock,
	FieldPriceproduct,
	FieldAmount,
	FieldTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Stock type.
var ForeignKeys = []string{
	"employee_employeestock",
	"product_stockproduct",
	"typeproduct_typestock",
	"zoneproduct_zonestock",
}

var (
	// IDstockValidator is a validator for the "IDstock" field. It is called by the builders before save.
	IDstockValidator func(string) error
	// PriceproductValidator is a validator for the "Priceproduct" field. It is called by the builders before save.
	PriceproductValidator func(float64) error
	// AmountValidator is a validator for the "Amount" field. It is called by the builders before save.
	AmountValidator func(int) error
)
