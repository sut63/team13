// Code generated by entc, DO NOT EDIT.

package customer

const (
	// Label holds the string label denoting the customer type in the database.
	Label = "customer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"

	// EdgeFormcustomer holds the string denoting the formcustomer edge name in mutations.
	EdgeFormcustomer = "formcustomer"

	// Table holds the table name of the customer in the database.
	Table = "customers"
	// FormcustomerTable is the table the holds the formcustomer relation/edge.
	FormcustomerTable = "orderonlines"
	// FormcustomerInverseTable is the table name for the Orderonline entity.
	// It exists in this package in order to avoid circular dependency with the "orderonline" package.
	FormcustomerInverseTable = "orderonlines"
	// FormcustomerColumn is the table column denoting the formcustomer relation/edge.
	FormcustomerColumn = "customer_formcustomer"
)

// Columns holds all SQL columns for customer fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmail,
	FieldPassword,
	FieldAge,
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
)
