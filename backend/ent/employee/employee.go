// Code generated by entc, DO NOT EDIT.

package employee

const (
	// Label holds the string label denoting the employee type in the database.
	Label = "employee"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"

	// EdgeWhose holds the string denoting the whose edge name in mutations.
	EdgeWhose = "whose"
	// EdgeEmployeestock holds the string denoting the employeestock edge name in mutations.
	EdgeEmployeestock = "employeestock"
	// EdgeFormemployee holds the string denoting the formemployee edge name in mutations.
	EdgeFormemployee = "formemployee"

	// Table holds the table name of the employee in the database.
	Table = "employees"
	// WhoseTable is the table the holds the whose relation/edge.
	WhoseTable = "employee_working_hours"
	// WhoseInverseTable is the table name for the EmployeeWorkingHours entity.
	// It exists in this package in order to avoid circular dependency with the "employeeworkinghours" package.
	WhoseInverseTable = "employee_working_hours"
	// WhoseColumn is the table column denoting the whose relation/edge.
	WhoseColumn = "employee_whose"
	// EmployeestockTable is the table the holds the employeestock relation/edge.
	EmployeestockTable = "stocks"
	// EmployeestockInverseTable is the table name for the Stock entity.
	// It exists in this package in order to avoid circular dependency with the "stock" package.
	EmployeestockInverseTable = "stocks"
	// EmployeestockColumn is the table column denoting the employeestock relation/edge.
	EmployeestockColumn = "employee_employeestock"
	// FormemployeeTable is the table the holds the formemployee relation/edge.
	FormemployeeTable = "salaries"
	// FormemployeeInverseTable is the table name for the Salary entity.
	// It exists in this package in order to avoid circular dependency with the "salary" package.
	FormemployeeInverseTable = "salaries"
	// FormemployeeColumn is the table column denoting the formemployee relation/edge.
	FormemployeeColumn = "employee_formemployee"
)

// Columns holds all SQL columns for employee fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmail,
	FieldAge,
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
)
