// Code generated by entc, DO NOT EDIT.

package typeproduct

const (
	// Label holds the string label denoting the typeproduct type in the database.
	Label = "typeproduct"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTypeproduct holds the string denoting the typeproduct field in the database.
	FieldTypeproduct = "typeproduct"

	// EdgeTypestock holds the string denoting the typestock edge name in mutations.
	EdgeTypestock = "typestock"
	// EdgeTypeproducts holds the string denoting the typeproducts edge name in mutations.
	EdgeTypeproducts = "Typeproducts"
	// EdgeFromTypeproductonline holds the string denoting the fromtypeproductonline edge name in mutations.
	EdgeFromTypeproductonline = "fromTypeproductonline"

	// Table holds the table name of the typeproduct in the database.
	Table = "typeproducts"
	// TypestockTable is the table the holds the typestock relation/edge.
	TypestockTable = "stocks"
	// TypestockInverseTable is the table name for the Stock entity.
	// It exists in this package in order to avoid circular dependency with the "stock" package.
	TypestockInverseTable = "stocks"
	// TypestockColumn is the table column denoting the typestock relation/edge.
	TypestockColumn = "typeproduct_typestock"
	// TypeproductsTable is the table the holds the Typeproducts relation/edge.
	TypeproductsTable = "orderproducts"
	// TypeproductsInverseTable is the table name for the Orderproduct entity.
	// It exists in this package in order to avoid circular dependency with the "orderproduct" package.
	TypeproductsInverseTable = "orderproducts"
	// TypeproductsColumn is the table column denoting the Typeproducts relation/edge.
	TypeproductsColumn = "typeproduct_typeproducts"
	// FromTypeproductonlineTable is the table the holds the fromTypeproductonline relation/edge.
	FromTypeproductonlineTable = "orderonlines"
	// FromTypeproductonlineInverseTable is the table name for the Orderonline entity.
	// It exists in this package in order to avoid circular dependency with the "orderonline" package.
	FromTypeproductonlineInverseTable = "orderonlines"
	// FromTypeproductonlineColumn is the table column denoting the fromTypeproductonline relation/edge.
	FromTypeproductonlineColumn = "typeproduct_from_typeproductonline"
)

// Columns holds all SQL columns for typeproduct fields.
var Columns = []string{
	FieldID,
	FieldTypeproduct,
}

var (
	// TypeproductValidator is a validator for the "Typeproduct" field. It is called by the builders before save.
	TypeproductValidator func(string) error
)
