{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/assessments": {
            "get": {
                "description": "list assessment entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List assessment entities",
                "operationId": "list-assessment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Assessment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create assessment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create assessment",
                "operationId": "create-assessment",
                "parameters": [
                    {
                        "description": "Assessment entity",
                        "name": "assessment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Assessment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Assessment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/assessments/{id}": {
            "get": {
                "description": "get assessment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a assessment entity by ID",
                "operationId": "get-assessment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Assessment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Assessment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update assessment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a assessment entity by ID",
                "operationId": "update-assessment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Assessment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assessment entity",
                        "name": "assessment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Assessment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Assessment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get assessment by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a assessment entity by ID",
                "operationId": "delete-assessment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Assessment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/companys": {
            "get": {
                "description": "list company entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List company entities",
                "operationId": "list-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Company"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create company",
                "operationId": "create-company",
                "parameters": [
                    {
                        "description": "Company entity",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/companys/{id}": {
            "get": {
                "description": "get company by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a company entity by ID",
                "operationId": "get-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update company by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a company entity by ID",
                "operationId": "update-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company entity",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Company"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get company by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a company entity by ID",
                "operationId": "delete-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "description": "list customer entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List customer entities",
                "operationId": "list-customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create customer",
                "operationId": "create-customer",
                "parameters": [
                    {
                        "description": "Customer entity",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "get customer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a customer entity by ID",
                "operationId": "get-customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/days": {
            "get": {
                "description": "list day entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List day entities",
                "operationId": "list-day",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Day"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create day",
                "operationId": "create-day",
                "parameters": [
                    {
                        "description": "Day entity",
                        "name": "day",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Day"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Day"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/days/{id}": {
            "get": {
                "description": "get day by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a day entity by ID",
                "operationId": "get-day",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Day ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Day"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update day by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a day entity by ID",
                "operationId": "update-day",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Day ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Day entity",
                        "name": "day",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Day"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Day"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get day by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a day entity by ID",
                "operationId": "delete-day",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Day ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/discounts": {
            "get": {
                "description": "list discount entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List discount entities",
                "operationId": "list-discount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Discount"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create discount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create discount",
                "operationId": "create-discount",
                "parameters": [
                    {
                        "description": "Discount entity",
                        "name": "discount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Discount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Discount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/discounts/{id}": {
            "get": {
                "description": "get discount by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a discount entity by ID",
                "operationId": "get-discount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Discount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update discount by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a discount entity by ID",
                "operationId": "update-discount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Discount entity",
                        "name": "discount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Discount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Discount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get discount by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a discount entity by ID",
                "operationId": "delete-discount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Discount ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "list employee entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List employee entities",
                "operationId": "list-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Employee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create employee",
                "operationId": "create-employee",
                "parameters": [
                    {
                        "description": "Employee entity",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a employee entity by ID",
                "operationId": "get-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update employee by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a employee entity by ID",
                "operationId": "update-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee entity",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get employee by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a employee entity by ID",
                "operationId": "delete-employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employeeworkinghourss": {
            "get": {
                "description": "list employeeworkinghours entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List employeeworkinghours entities",
                "operationId": "list-employeeworkinghours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.EmployeeWorkingHours"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create employeeworkinghours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create employeeworkinghours",
                "operationId": "create-employeeworkinghours",
                "parameters": [
                    {
                        "description": "EmployeeWorkingHours entity",
                        "name": "employeeworkinghours",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.EmployeeWorkingHours"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EmployeeWorkingHours"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/employeeworkinghourss/{id}": {
            "get": {
                "description": "get employeeworkinghours by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a employeeworkinghours entity by ID",
                "operationId": "get-employeeworkinghours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EmployeeWorkingHours ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EmployeeWorkingHours"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update employeeworkinghours by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a employeeworkinghours entity by ID",
                "operationId": "update-employeeworkinghours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EmployeeWorkingHours ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "EmployeeWorkingHours entity",
                        "name": "employeeworkinghours",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.EmployeeWorkingHours"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.EmployeeWorkingHours"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get employeeworkinghours by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a employeeworkinghours entity by ID",
                "operationId": "delete-employeeworkinghours",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EmployeeWorkingHours ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/giveaways": {
            "get": {
                "description": "list giveaway entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List giveaway entities",
                "operationId": "list-giveaway",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Giveaway"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create giveaway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create giveaway",
                "operationId": "create-giveaway",
                "parameters": [
                    {
                        "description": "Giveaway entity",
                        "name": "giveaway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Giveaway"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Giveaway"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/giveaways/{id}": {
            "get": {
                "description": "get giveaway by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a giveaway entity by ID",
                "operationId": "get-giveaway",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Giveaway"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update giveaway by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a giveaway entity by ID",
                "operationId": "update-giveaway",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Giveaway entity",
                        "name": "giveaway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Giveaway"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Giveaway"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get giveaway by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a giveaway entity by ID",
                "operationId": "delete-giveaway",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Giveaway ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/managers": {
            "get": {
                "description": "list manager entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List manager entities",
                "operationId": "list-manager",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Manager"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create manager",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create manager",
                "operationId": "create-manager",
                "parameters": [
                    {
                        "description": "Manager entity",
                        "name": "manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Manager"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Manager"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/managers/{id}": {
            "get": {
                "description": "get manager by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a manager entity by ID",
                "operationId": "get-manager",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Manager ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Manager"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update manager by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a manager entity by ID",
                "operationId": "update-manager",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Manager ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manager entity",
                        "name": "manager",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Manager"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Manager"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get manager by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a manager entity by ID",
                "operationId": "delete-manager",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Manager ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/orderonlines": {
            "get": {
                "description": "list orderonline entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List orderonline entities",
                "operationId": "list-orderonline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Orderonline"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create orderonline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create orderonline",
                "operationId": "create-orderonline",
                "parameters": [
                    {
                        "description": "Orderonline entity",
                        "name": "orderonline",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Orderonline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Orderonline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/orderonlines/{id}": {
            "get": {
                "description": "get orderonline by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a orderonline entity by ID",
                "operationId": "get-orderonline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Orderonline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Orderonline"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get orderonline by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a orderonline entity by ID",
                "operationId": "delete-orderonline",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Orderonline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/orderproducts": {
            "get": {
                "description": "list orderproduct entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List orderproduct entities",
                "operationId": "list-orderproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Orderproduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create orderproduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create orderproduct",
                "operationId": "create-orderproduct",
                "parameters": [
                    {
                        "description": "Orderproduct entity",
                        "name": "orderproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Orderproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Orderproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/orderproducts/{id}": {
            "get": {
                "description": "get orderproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a orderproduct entity by ID",
                "operationId": "get-orderproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Orderproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Orderproduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update orderproduct by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a orderproduct entity by ID",
                "operationId": "update-orderproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Orderproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Orderproduct entity",
                        "name": "orderproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Orderproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Orderproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get orderproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a orderproduct entity by ID",
                "operationId": "delete-orderproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Orderproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymentchannels": {
            "get": {
                "description": "list paymentchannel entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List paymentchannel entities",
                "operationId": "list-paymentchannel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Paymentchannel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create paymentchannel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create paymentchannel",
                "operationId": "create-paymentchannel",
                "parameters": [
                    {
                        "description": "Paymentchannel entity",
                        "name": "paymentchannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Paymentchannel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Paymentchannel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymentchannels/{id}": {
            "get": {
                "description": "get paymentchannel by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a paymentchannel entity by ID",
                "operationId": "get-paymentchannel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Paymentchannel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Paymentchannel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/positions": {
            "get": {
                "description": "list position entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List position entities",
                "operationId": "list-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Position"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create position",
                "operationId": "create-position",
                "parameters": [
                    {
                        "description": "Position entity",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/positions/{id}": {
            "get": {
                "description": "get position by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a position entity by ID",
                "operationId": "get-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update position by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a position entity by ID",
                "operationId": "update-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Position entity",
                        "name": "position",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Position"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get position by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a position entity by ID",
                "operationId": "delete-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "list product entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List product entities",
                "operationId": "list-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create product",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "Product entity",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "get product by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a product entity by ID",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a product entity by ID",
                "operationId": "update-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product entity",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get product by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a product entity by ID",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotions": {
            "get": {
                "description": "list promotion entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List promotion entities",
                "operationId": "list-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Promotion"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create promotion",
                "operationId": "create-promotion",
                "parameters": [
                    {
                        "description": "Promotion entity",
                        "name": "promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Promotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotions/{id}": {
            "get": {
                "description": "get promotion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a promotion entity by ID",
                "operationId": "get-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get promotion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a promotion entity by ID",
                "operationId": "delete-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "list role entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List role entities",
                "operationId": "list-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create role",
                "operationId": "create-role",
                "parameters": [
                    {
                        "description": "Role entity",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "description": "get role by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a role entity by ID",
                "operationId": "get-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a role entity by ID",
                "operationId": "update-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role entity",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get role by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a role entity by ID",
                "operationId": "delete-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/salarys": {
            "get": {
                "description": "list salary entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List salary entities",
                "operationId": "list-salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Salary"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create salary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create salary",
                "operationId": "create-salary",
                "parameters": [
                    {
                        "description": "Salary entity",
                        "name": "salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Salary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Salary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/salarys/{id}": {
            "get": {
                "description": "get salary by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a salary entity by ID",
                "operationId": "get-salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Salary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Salary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get salary by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a salary entity by ID",
                "operationId": "delete-salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Salary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/shifts": {
            "get": {
                "description": "list shift entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List shift entities",
                "operationId": "list-shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Shift"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create shift",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create shift",
                "operationId": "create-shift",
                "parameters": [
                    {
                        "description": "Shift entity",
                        "name": "shift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Shift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Shift"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/shifts/{id}": {
            "get": {
                "description": "get shift by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a shift entity by ID",
                "operationId": "get-shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Shift"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update shift by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a shift entity by ID",
                "operationId": "update-shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shift entity",
                        "name": "shift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Shift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Shift"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get shift by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a shift entity by ID",
                "operationId": "delete-shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/stock/{id}": {
            "put": {
                "description": "update stock by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a stock entity by ID",
                "operationId": "update-stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "stock ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stock entity",
                        "name": "stock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Stock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Stock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/stocks": {
            "get": {
                "description": "list stock entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List stock entities",
                "operationId": "list-stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Stock"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create stock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create stock",
                "operationId": "create-stock",
                "parameters": [
                    {
                        "description": "Stock entity",
                        "name": "stock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Stock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Stock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/stocks/{id}": {
            "get": {
                "description": "get stock by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a stock entity by ID",
                "operationId": "get-stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Stock"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get stock by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a stock entity by ID",
                "operationId": "delete-stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stock ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typeproducts": {
            "get": {
                "description": "list typeproduct entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List typeproduct entities",
                "operationId": "list-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Typeproduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create typeproduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create typeproduct",
                "operationId": "create-typeproduct",
                "parameters": [
                    {
                        "description": "Typeproduct entity",
                        "name": "typeproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typeproducts/{id}": {
            "get": {
                "description": "get typeproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a typeproduct entity by ID",
                "operationId": "get-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Typeproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update typeproduct by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a typeproduct entity by ID",
                "operationId": "update-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Typeproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Typeproduct entity",
                        "name": "typeproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get typeproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a typeproduct entity by ID",
                "operationId": "delete-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Typeproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/zoneproducts": {
            "get": {
                "description": "list zoneproduct entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List zoneproduct entities",
                "operationId": "list-zoneproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Zoneproduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create zoneproduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create zoneproduct",
                "operationId": "create-zoneproduct",
                "parameters": [
                    {
                        "description": "Zoneproduct entity",
                        "name": "zoneproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Zoneproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Zoneproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/zoneproducts/{id}": {
            "get": {
                "description": "get zoneproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a zoneproduct entity by ID",
                "operationId": "get-zoneproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zoneproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Zoneproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update zoneproduct by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a zoneproduct entity by ID",
                "operationId": "update-zoneproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zoneproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Zoneproduct entity",
                        "name": "zoneproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Zoneproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Zoneproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get zoneproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a zoneproduct entity by ID",
                "operationId": "delete-zoneproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Zoneproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.EmployeeWorkingHours": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer"
                },
                "employee": {
                    "type": "integer"
                },
                "idemployee": {
                    "type": "string"
                },
                "idnumber": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "shift": {
                    "type": "integer"
                },
                "wages": {
                    "type": "number"
                }
            }
        },
        "controllers.Orderonline": {
            "type": "object",
            "properties": {
                "accountnumber": {
                    "type": "string"
                },
                "addedtime": {
                    "type": "string"
                },
                "customerid": {
                    "type": "integer"
                },
                "cvv": {
                    "type": "string"
                },
                "paymentchannelid": {
                    "type": "integer"
                },
                "productid": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "typeproductid": {
                    "type": "integer"
                }
            }
        },
        "controllers.Orderproduct": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "type": "string"
                },
                "companyID": {
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "managerID": {
                    "type": "integer"
                },
                "productID": {
                    "type": "integer"
                },
                "shipment": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "typeproductID": {
                    "type": "integer"
                }
            }
        },
        "controllers.Promotion": {
            "type": "object",
            "properties": {
                "discount": {
                    "type": "integer"
                },
                "durationPromotion": {
                    "type": "string"
                },
                "giveaway": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "product": {
                    "type": "integer"
                },
                "promotionName": {
                    "type": "string"
                }
            }
        },
        "controllers.Salary": {
            "type": "object",
            "properties": {
                "assessmentID": {
                    "type": "integer"
                },
                "bonus": {
                    "type": "number"
                },
                "employeeID": {
                    "type": "integer"
                },
                "positionID": {
                    "type": "integer"
                },
                "salaryDate": {
                    "type": "string"
                },
                "salarys": {
                    "type": "number"
                }
            }
        },
        "controllers.Stock": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "employeeID": {
                    "type": "integer"
                },
                "idcardemployee": {
                    "type": "string"
                },
                "priceproduct": {
                    "type": "number"
                },
                "productID": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "typeproductID": {
                    "type": "integer"
                },
                "zoneID": {
                    "type": "integer"
                }
            }
        },
        "ent.Assessment": {
            "type": "object",
            "properties": {
                "assessment": {
                    "description": "Assessment holds the value of the \"assessment\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AssessmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AssessmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.AssessmentEdges": {
            "type": "object",
            "properties": {
                "formassessment": {
                    "description": "Formassessment holds the value of the formassessment edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Salary"
                    }
                }
            }
        },
        "ent.Company": {
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name holds the value of the \"Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CompanyQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CompanyEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CompanyEdges": {
            "type": "object",
            "properties": {
                "companys": {
                    "description": "Companys holds the value of the companys edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderproduct"
                    }
                }
            }
        },
        "ent.Customer": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age holds the value of the \"age\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CustomerQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CustomerEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CustomerEdges": {
            "type": "object",
            "properties": {
                "formcustomer": {
                    "description": "Formcustomer holds the value of the formcustomer edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderonline"
                    }
                }
            }
        },
        "ent.Day": {
            "type": "object",
            "properties": {
                "Day": {
                    "description": "Day holds the value of the \"Day\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DayQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DayEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DayEdges": {
            "type": "object",
            "properties": {
                "whatday": {
                    "description": "Whatday holds the value of the whatday edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EmployeeWorkingHours"
                    }
                }
            }
        },
        "ent.Discount": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DiscountQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DiscountEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "sale": {
                    "description": "Sale holds the value of the \"sale\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.DiscountEdges": {
            "type": "object",
            "properties": {
                "fordiscount": {
                    "description": "Fordiscount holds the value of the fordiscount edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Promotion"
                    }
                }
            }
        },
        "ent.Employee": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "Age holds the value of the \"age\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EmployeeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EmployeeEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EmployeeEdges": {
            "type": "object",
            "properties": {
                "employeestock": {
                    "description": "Employeestock holds the value of the employeestock edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Stock"
                    }
                },
                "formemployee": {
                    "description": "Formemployee holds the value of the formemployee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Salary"
                },
                "whose": {
                    "description": "Whose holds the value of the whose edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EmployeeWorkingHours"
                    }
                }
            }
        },
        "ent.EmployeeWorkingHours": {
            "type": "object",
            "properties": {
                "IDEmployee": {
                    "description": "IDEmployee holds the value of the \"IDEmployee\" field.",
                    "type": "string"
                },
                "IDNumber": {
                    "description": "IDNumber holds the value of the \"IDNumber\" field.",
                    "type": "string"
                },
                "Wages": {
                    "description": "Wages holds the value of the \"Wages\" field.",
                    "type": "number"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EmployeeWorkingHoursQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.EmployeeWorkingHoursEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.EmployeeWorkingHoursEdges": {
            "type": "object",
            "properties": {
                "day": {
                    "description": "Day holds the value of the day edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Day"
                },
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "role": {
                    "description": "Role holds the value of the role edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Role"
                },
                "shift": {
                    "description": "Shift holds the value of the shift edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Shift"
                }
            }
        },
        "ent.Giveaway": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the GiveawayQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.GiveawayEdges"
                },
                "giveawayName": {
                    "description": "GiveawayName holds the value of the \"giveawayName\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.GiveawayEdges": {
            "type": "object",
            "properties": {
                "forgiveaway": {
                    "description": "Forgiveaway holds the value of the forgiveaway edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Promotion"
                    }
                }
            }
        },
        "ent.Manager": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ManagerQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ManagerEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ManagerEdges": {
            "type": "object",
            "properties": {
                "managers": {
                    "description": "Managers holds the value of the managers edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderproduct"
                    }
                }
            }
        },
        "ent.Orderonline": {
            "type": "object",
            "properties": {
                "accountnumber": {
                    "description": "Accountnumber holds the value of the \"accountnumber\" field.",
                    "type": "string"
                },
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "cvv": {
                    "description": "Cvv holds the value of the \"cvv\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the OrderonlineQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.OrderonlineEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "stock": {
                    "description": "Stock holds the value of the \"stock\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.OrderonlineEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "paymentchannel": {
                    "description": "Paymentchannel holds the value of the paymentchannel edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Paymentchannel"
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Product"
                },
                "typeproduct": {
                    "description": "Typeproduct holds the value of the Typeproduct edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Typeproduct"
                }
            }
        },
        "ent.Orderproduct": {
            "type": "object",
            "properties": {
                "addedtime": {
                    "description": "Addedtime holds the value of the \"addedtime\" field.",
                    "type": "string"
                },
                "detail": {
                    "description": "Detail holds the value of the \"detail\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the OrderproductQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.OrderproductEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "shipment": {
                    "description": "Shipment holds the value of the \"shipment\" field.",
                    "type": "string"
                },
                "stock": {
                    "description": "Stock holds the value of the \"stock\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.OrderproductEdges": {
            "type": "object",
            "properties": {
                "company": {
                    "description": "Company holds the value of the company edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Company"
                },
                "managers": {
                    "description": "Managers holds the value of the managers edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Manager"
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Product"
                },
                "typeproduct": {
                    "description": "Typeproduct holds the value of the Typeproduct edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Typeproduct"
                }
            }
        },
        "ent.Paymentchannel": {
            "type": "object",
            "properties": {
                "Bank": {
                    "description": "Bank holds the value of the \"Bank\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PaymentchannelQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaymentchannelEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PaymentchannelEdges": {
            "type": "object",
            "properties": {
                "formpaymentchannel": {
                    "description": "Formpaymentchannel holds the value of the formpaymentchannel edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderonline"
                    }
                }
            }
        },
        "ent.Position": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PositionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PositionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "position": {
                    "description": "Position holds the value of the \"position\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PositionEdges": {
            "type": "object",
            "properties": {
                "formposition": {
                    "description": "Formposition holds the value of the formposition edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Salary"
                    }
                }
            }
        },
        "ent.Product": {
            "type": "object",
            "properties": {
                "BarcodeProduct": {
                    "description": "BarcodeProduct holds the value of the \"BarcodeProduct\" field.",
                    "type": "string"
                },
                "EXP": {
                    "description": "EXP holds the value of the \"EXP\" field.",
                    "type": "string"
                },
                "MFG": {
                    "description": "MFG holds the value of the \"MFG\" field.",
                    "type": "string"
                },
                "NameProduct": {
                    "description": "NameProduct holds the value of the \"NameProduct\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ProductQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ProductEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ProductEdges": {
            "type": "object",
            "properties": {
                "formproductonline": {
                    "description": "Formproductonline holds the value of the formproductonline edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderonline"
                    }
                },
                "forproduct": {
                    "description": "Forproduct holds the value of the forproduct edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Promotion"
                    }
                },
                "products": {
                    "description": "Products holds the value of the products edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderproduct"
                    }
                },
                "stockproduct": {
                    "description": "Stockproduct holds the value of the stockproduct edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Stock"
                    }
                }
            }
        },
        "ent.Promotion": {
            "type": "object",
            "properties": {
                "DurationPromotion": {
                    "description": "DurationPromotion holds the value of the \"DurationPromotion\" field.",
                    "type": "string"
                },
                "Price": {
                    "description": "Price holds the value of the \"Price\" field.",
                    "type": "number"
                },
                "PromotionName": {
                    "description": "PromotionName holds the value of the \"PromotionName\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PromotionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PromotionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PromotionEdges": {
            "type": "object",
            "properties": {
                "give": {
                    "description": "Give holds the value of the give edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Giveaway"
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Product"
                },
                "sale": {
                    "description": "Sale holds the value of the sale edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Discount"
                }
            }
        },
        "ent.Role": {
            "type": "object",
            "properties": {
                "Role": {
                    "description": "Role holds the value of the \"Role\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoleQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoleEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.RoleEdges": {
            "type": "object",
            "properties": {
                "todo": {
                    "description": "Todo holds the value of the todo edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EmployeeWorkingHours"
                    }
                }
            }
        },
        "ent.Salary": {
            "type": "object",
            "properties": {
                "Bonus": {
                    "description": "Bonus holds the value of the \"Bonus\" field.",
                    "type": "number"
                },
                "Salary": {
                    "description": "Salary holds the value of the \"Salary\" field.",
                    "type": "number"
                },
                "SalaryDatetime": {
                    "description": "SalaryDatetime holds the value of the \"SalaryDatetime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SalaryQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SalaryEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.SalaryEdges": {
            "type": "object",
            "properties": {
                "assessment": {
                    "description": "Assessment holds the value of the assessment edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Assessment"
                },
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "position": {
                    "description": "Position holds the value of the position edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Position"
                }
            }
        },
        "ent.Shift": {
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name holds the value of the \"Name\" field.",
                    "type": "string"
                },
                "TimeEnd": {
                    "description": "TimeEnd holds the value of the \"TimeEnd\" field.",
                    "type": "string"
                },
                "TimeStart": {
                    "description": "TimeStart holds the value of the \"TimeStart\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ShiftQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ShiftEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ShiftEdges": {
            "type": "object",
            "properties": {
                "when": {
                    "description": "When holds the value of the when edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.EmployeeWorkingHours"
                    }
                }
            }
        },
        "ent.Stock": {
            "type": "object",
            "properties": {
                "Amount": {
                    "description": "Amount holds the value of the \"Amount\" field.",
                    "type": "integer"
                },
                "IDcardemployee": {
                    "description": "IDcardemployee holds the value of the \"IDcardemployee\" field.",
                    "type": "string"
                },
                "Priceproduct": {
                    "description": "Priceproduct holds the value of the \"Priceproduct\" field.",
                    "type": "number"
                },
                "Time": {
                    "description": "Time holds the value of the \"Time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StockQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StockEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.StockEdges": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee holds the value of the employee edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Employee"
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Product"
                },
                "typeproduct": {
                    "description": "Typeproduct holds the value of the Typeproduct edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Typeproduct"
                },
                "zoneproduct": {
                    "description": "Zoneproduct holds the value of the zoneproduct edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Zoneproduct"
                }
            }
        },
        "ent.Typeproduct": {
            "type": "object",
            "properties": {
                "Typeproduct": {
                    "description": "Typeproduct holds the value of the \"Typeproduct\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TypeproductQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypeproductEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.TypeproductEdges": {
            "type": "object",
            "properties": {
                "fromTypeproductonline": {
                    "description": "FromTypeproductonline holds the value of the fromTypeproductonline edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderonline"
                    }
                },
                "typeproducts": {
                    "description": "Typeproducts holds the value of the Typeproducts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Orderproduct"
                    }
                },
                "typestock": {
                    "description": "Typestock holds the value of the typestock edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Stock"
                    }
                }
            }
        },
        "ent.Zoneproduct": {
            "type": "object",
            "properties": {
                "Zone": {
                    "description": "Zone holds the value of the \"Zone\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ZoneproductQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ZoneproductEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ZoneproductEdges": {
            "type": "object",
            "properties": {
                "zonestock": {
                    "description": "Zonestock holds the value of the zonestock edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Stock"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}